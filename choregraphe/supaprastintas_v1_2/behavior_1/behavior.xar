<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Input name="LiepaWordRecognizedNOT" type="0" type_size="1" nature="4" stm_value_name="LiepaWordRecognizedNOT" inner="1" tooltip="LiepaWordRecognizedNOT desc" id="4" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram scale="59.4604">
            <Box name="StartTTS" id="1" localization="8" tooltip="" x="703" y="324">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        self.tts = ALProxy("LiepaTTS")
        text_to_say = self.getParameter("text_to_say")
        self.tts.sayText(text_to_say )
        self.onStopped(text_to_say)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Parameter name="text_to_say" inherits_from_parent="0" content_type="3" value="Minėjau laivus su varikliais. Tad siūlau rinktis burinį arba irklinį laivą. Kuris mums labiau tiktų?" default_value="" custom_choice="0" tooltip="" id="5" />
            </Box>
            <Box name="LiepaASRInit" id="2" localization="8" tooltip="" x="417" y="74">
              <bitmap>media/images/box/interaction/target_sound.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        grammar_path=self.behaviorAbsolutePath() + self.getParameter("grammar_file")
        dictionary_path=self.behaviorAbsolutePath() +  self.getParameter("dictionary_file")
        self.logger.info("grammar_path: " + grammar_path)
        liepaASR= ALProxy("LiepaASR")
        liepaASR.setGrammarPath(grammar_path)
        liepaASR.setDictionaryPath(dictionary_path)
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Parameter name="grammar_file" inherits_from_parent="0" content_type="4" value="/../atpazinimas/supaprastintas_v1.gram" default_value="" tooltip="" id="5" />
              <Parameter name="dictionary_file" inherits_from_parent="0" content_type="4" value="/../atpazinimas/supaprastintas_v1.dict" default_value="" tooltip="" id="6" />
            </Box>
            <Box name="Tactile Head" id="3" localization="8" tooltip="Detect touch on head tactile sensor." x="249" y="382">
              <bitmap>media/images/box/sensors/tactileHead.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
              <Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
              <Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" />
              <Output name="frontTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The front tactile head sensor was touched." id="8" />
              <Output name="middleTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The middle tactile head sensor was touched." id="9" />
              <Output name="rearTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The rear tactile head sensor was touched." id="10" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="If &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="260" y="17">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="256" y="119">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Box name="If &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="261" y="223">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="8" outputowner="1" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="5" />
                      <Link inputowner="0" indexofinput="9" outputowner="2" indexofoutput="4" />
                      <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" />
                      <Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
              <Resource name="Head-sequence" type="Lock" timeout="0" />
            </Box>
            <Box name="NotRecognized_1" id="4" localization="8" tooltip="" x="1009" y="36">
              <bitmap>media/images/box/interaction/choice.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        mem = ALProxy("ALMemory")
        val = mem.getData("LiepaWordRecognized")
        if(not val):
            val = "Nėra ką sakyti"
        ALProxy("LiepaTTS").sayText("Nesupratau ką pasakei: " + val)
        self.onStopped(val)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
            </Box>
            <Box name="SayRecognizedNot" id="5" localization="8" tooltip="" x="447" y="755">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        ALProxy("LiepaTTS").sayText("Nesupratau. Prašau pakartok")
        ALProxy("LiepaASR").start()
        self.onStopped("")

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
            </Box>
            <Box name="kuris_laivas" id="6" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="869" y="327">
              <bitmap>media/images/box/interaction/choice.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("burinis laivas")):
			self.output_1(p)
		elif(p == self.typeConversion("irklinis laivas")):
			self.output_2(p)
		elif(p == self.typeConversion("nežinau")):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                </content>
              </script>
              <pluginContent>
                <keywords>
                  <keyword>&quot;burinis laivas&quot;</keyword>
                  <keyword>&quot;irklinis laivas&quot;</keyword>
                  <keyword>&quot;nežinau&quot;</keyword>
                  <keyword></keyword>
                </keywords>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
              <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
              <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
              <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
              <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
            </Box>
            <Box name="Agree.End" id="7" localization="8" tooltip="" x="2704" y="67">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        self.tts = ALProxy("LiepaTTS")
        text_to_say = self.getParameter("text_to_say")
        self.tts.sayText(text_to_say )
        self.onStopped(text_to_say)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Parameter name="text_to_say" inherits_from_parent="0" content_type="3" value="Pritariu tau... Plaukime su buriniu laivu ir neterškime gamtos... Tai bent mūsų laukia puiki kelionė... Pasiekę kitą ežero pusę aplankysime Stelmužės ąžuolą" default_value="" custom_choice="0" tooltip="" id="5" />
            </Box>
            <Box name="WrongAnswer" id="8" localization="8" tooltip="" x="1198" y="685">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        self.tts = ALProxy("LiepaTTS")
        text_to_say = self.getParameter("text_to_say")
        self.tts.sayText(text_to_say )
        self.onStopped(text_to_say)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Parameter name="text_to_say" inherits_from_parent="0" content_type="3" value="Bet ežeras toks didelis... aš irkluoti tikrai  negalėsiu... mūsų laukia dar ilga kelionė. Pasirinkime kitą. Ką renkiesi?" default_value="" custom_choice="0" tooltip="" id="5" />
            </Box>
            <Box name="ar_valtis" id="11" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="1528" y="689">
              <bitmap>media/images/box/interaction/choice.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("valtį")):
			self.output_1(p)
		elif(p == self.typeConversion("nežinau")):
			self.output_2(p)
		elif(p == self.typeConversion("burinis laivas")):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                </content>
              </script>
              <pluginContent>
                <keywords>
                  <keyword>&quot;valtį&quot;</keyword>
                  <keyword>&quot;nežinau&quot;</keyword>
                  <keyword>&quot;burinis laivas&quot;</keyword>
                  <keyword></keyword>
                </keywords>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
              <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
              <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
              <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
              <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
            </Box>
            <Box name="ar_burinis_geriau" id="12" localization="8" tooltip="" x="1144" y="1182">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        self.tts = ALProxy("LiepaTTS")
        text_to_say = self.getParameter("text_to_say")
        self.tts.sayText(text_to_say )
        self.onStopped(text_to_say)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Parameter name="text_to_say" inherits_from_parent="0" content_type="3" value="Pagalvokim. Yra du laivai: su burėmis, ir su irklais. Ežeras pats didžiausias Lietuvoje. Laivą su irklais mums teks irkluoti patiems. Irkluoti aš nemoku, tau vienam bus labai sunku. Ar sutinki, kad burinis laivas mums labiau tiktų?" default_value="" custom_choice="0" tooltip="" id="5" />
            </Box>
            <Box name="ar_burinis_geriau_ans" id="13" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="1433" y="1280">
              <bitmap>media/images/box/interaction/choice.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("taip")):
			self.output_1(p)
		elif(p == self.typeConversion("ne")):
			self.output_2(p)
		elif(p == self.typeConversion("nežinau")):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                </content>
              </script>
              <pluginContent>
                <keywords>
                  <keyword>&quot;taip&quot;</keyword>
                  <keyword>&quot;ne&quot;</keyword>
                  <keyword>&quot;nežinau&quot;</keyword>
                  <keyword></keyword>
                </keywords>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
              <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
              <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
              <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
              <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
            </Box>
            <Box name="visvien_valti" id="14" localization="8" tooltip="" x="2071" y="685">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        self.tts = ALProxy("LiepaTTS")
        text_to_say = self.getParameter("text_to_say")
        self.tts.sayText(text_to_say )
        self.onStopped(text_to_say)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Parameter name="text_to_say" inherits_from_parent="0" content_type="3" value="Siūlau plaukti buriniu laivu. Jo nereikės irkluoti, naudosime vėjo energiją, vadinasi neteršime gamtos. Sutinki?" default_value="" custom_choice="0" tooltip="" id="5" />
            </Box>
            <Box name="nesutariam_ate" id="16" localization="8" tooltip="" x="2716" y="318">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        self.tts = ALProxy("LiepaTTS")
        text_to_say = self.getParameter("text_to_say")
        self.tts.sayText(text_to_say )
        self.onStopped(text_to_say)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Parameter name="text_to_say" inherits_from_parent="0" content_type="3" value="Aš tuomet eisiu ieškoti kito draugo, kuris su manimi plauktų buriniu laivu ir keliautume tolyn, o tau linkiu sėkmės ir sakau iki kito karto." default_value="" custom_choice="0" tooltip="" id="5" />
            </Box>
            <Box name="LiepaASR_1" id="17" localization="8" tooltip="Subscribes to a signal on a NAOqi2 service, or an event in NAOqi&apos;s shared memory&#x0A;When subscribed, the output will be triggered every time the signal is emitted or the event is raised." x="785" y="110">
              <bitmap>media/images/box/interaction/reco_voice.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        import threading
        self.lock = threading.RLock()
        self.signal = None
        self.linkId = -1

    def onUnload(self):
        with self.lock:
            self.unsubscribe()

    def onInput_onStart(self):
        with self.lock:
            self.unsubscribe()
            ALProxy("LiepaASR").start()
            event = self.getParameter("event")

            if(len(event) == 0):
                self.onError("No event or signal given.")
                return

            params = event.split(".")
            if(len(params) == 2):
                try:
                    self.signal = getattr(self.session().service(params[0]), params[1])
                except Exception as e:
                    mem = self.session().service("ALMemory")
                    if(event in mem.getEventList()):
                        self.signal = mem.subscriber(event).signal
                    else:
                        self.onError(event + ": no such service.signal pair found, and no such event declared in ALMemory. Aborting.")
                        return
            else:
                self.signal = self.session().service("ALMemory").subscriber(event).signal

            self.linkId = self.signal.connect(self.reemitSignal)

    def onInput_onStop(self):
        with self.lock:
            self.unsubscribe()
            self.onStopped()

    def unsubscribe(self):
        if(self.signal is not None and self.linkId != -1):
            self.signal.disconnect(self.linkId)

        del self.signal
        self.signal = None
        self.linkId = -1

    def reemitSignal(self, *args):
        if(len(args) == 0):
            self.onEvent()
        elif(len(args) == 1):
            self.onEvent(args[0])
        else:
            self.onEvent(args)
        self.unsubscribe()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is activated, the box will try to subscribe to the signal or the event passed in the box parameter.&#x0A;&#x0A;If it is retriggered and the parameter has changed, the box will undo the previous subscription and subscribe to the new signal or the new event." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the box and cancel the subscription, if any." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="This output is triggered when the box encounters an error, and contains the error message." id="5" />
              <Output name="onEvent" type="0" type_size="1" nature="2" inner="0" tooltip="This output is triggered each time the signal/event to which the box is connected is emitted/raised. It will carry the payload associated with the signal emission/event raise." id="6" />
              <Parameter name="event" inherits_from_parent="0" content_type="3" value="LiepaWordRecognized" default_value="" custom_choice="0" tooltip='This parameter describes the signal to connect to, and the service advertising this signal.&#x0A;&#x0A;Use the pattern &quot;Service.Signal&quot; to connect to a signal, or the event key to connect to an event.' id="7" />
            </Box>
            <Box name="LiepaASR_2" id="9" localization="8" tooltip="Subscribes to a signal on a NAOqi2 service, or an event in NAOqi&apos;s shared memory&#x0A;When subscribed, the output will be triggered every time the signal is emitted or the event is raised." x="1505" y="561">
              <bitmap>media/images/box/interaction/reco_voice.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        import threading
        self.lock = threading.RLock()
        self.signal = None
        self.linkId = -1

    def onUnload(self):
        with self.lock:
            self.unsubscribe()

    def onInput_onStart(self):
        with self.lock:
            self.unsubscribe()
            ALProxy("LiepaASR").start()
            event = self.getParameter("event")

            if(len(event) == 0):
                self.onError("No event or signal given.")
                return

            params = event.split(".")
            if(len(params) == 2):
                try:
                    self.signal = getattr(self.session().service(params[0]), params[1])
                except Exception as e:
                    mem = self.session().service("ALMemory")
                    if(event in mem.getEventList()):
                        self.signal = mem.subscriber(event).signal
                    else:
                        self.onError(event + ": no such service.signal pair found, and no such event declared in ALMemory. Aborting.")
                        return
            else:
                self.signal = self.session().service("ALMemory").subscriber(event).signal

            self.linkId = self.signal.connect(self.reemitSignal)

    def onInput_onStop(self):
        with self.lock:
            self.unsubscribe()
            self.onStopped()

    def unsubscribe(self):
        if(self.signal is not None and self.linkId != -1):
            self.signal.disconnect(self.linkId)

        del self.signal
        self.signal = None
        self.linkId = -1

    def reemitSignal(self, *args):
        if(len(args) == 0):
            self.onEvent()
        elif(len(args) == 1):
            self.onEvent(args[0])
        else:
            self.onEvent(args)
        self.unsubscribe()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is activated, the box will try to subscribe to the signal or the event passed in the box parameter.&#x0A;&#x0A;If it is retriggered and the parameter has changed, the box will undo the previous subscription and subscribe to the new signal or the new event." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the box and cancel the subscription, if any." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="This output is triggered when the box encounters an error, and contains the error message." id="5" />
              <Output name="onEvent" type="0" type_size="1" nature="2" inner="0" tooltip="This output is triggered each time the signal/event to which the box is connected is emitted/raised. It will carry the payload associated with the signal emission/event raise." id="6" />
              <Parameter name="event" inherits_from_parent="0" content_type="3" value="LiepaWordRecognized" default_value="" custom_choice="0" tooltip='This parameter describes the signal to connect to, and the service advertising this signal.&#x0A;&#x0A;Use the pattern &quot;Service.Signal&quot; to connect to a signal, or the event key to connect to an event.' id="7" />
            </Box>
            <Box name="netersim" id="10" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="2423" y="763">
              <bitmap>media/images/box/interaction/choice.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("taip")):
			self.output_1(p)
		elif(p == self.typeConversion("ne")):
			self.output_2(p)
		elif(p == self.typeConversion("nežinau")):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                </content>
              </script>
              <pluginContent>
                <keywords>
                  <keyword>&quot;taip&quot;</keyword>
                  <keyword>&quot;ne&quot;</keyword>
                  <keyword>&quot;nežinau&quot;</keyword>
                  <keyword></keyword>
                </keywords>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
              <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
              <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
              <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
              <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
            </Box>
            <Box name="LiepaASR_4" id="15" localization="8" tooltip="Subscribes to a signal on a NAOqi2 service, or an event in NAOqi&apos;s shared memory&#x0A;When subscribed, the output will be triggered every time the signal is emitted or the event is raised." x="2414" y="606">
              <bitmap>media/images/box/interaction/reco_voice.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        import threading
        self.lock = threading.RLock()
        self.signal = None
        self.linkId = -1

    def onUnload(self):
        with self.lock:
            self.unsubscribe()

    def onInput_onStart(self):
        with self.lock:
            self.unsubscribe()
            ALProxy("LiepaASR").start()
            event = self.getParameter("event")

            if(len(event) == 0):
                self.onError("No event or signal given.")
                return

            params = event.split(".")
            if(len(params) == 2):
                try:
                    self.signal = getattr(self.session().service(params[0]), params[1])
                except Exception as e:
                    mem = self.session().service("ALMemory")
                    if(event in mem.getEventList()):
                        self.signal = mem.subscriber(event).signal
                    else:
                        self.onError(event + ": no such service.signal pair found, and no such event declared in ALMemory. Aborting.")
                        return
            else:
                self.signal = self.session().service("ALMemory").subscriber(event).signal

            self.linkId = self.signal.connect(self.reemitSignal)

    def onInput_onStop(self):
        with self.lock:
            self.unsubscribe()
            self.onStopped()

    def unsubscribe(self):
        if(self.signal is not None and self.linkId != -1):
            self.signal.disconnect(self.linkId)

        del self.signal
        self.signal = None
        self.linkId = -1

    def reemitSignal(self, *args):
        if(len(args) == 0):
            self.onEvent()
        elif(len(args) == 1):
            self.onEvent(args[0])
        else:
            self.onEvent(args)
        self.unsubscribe()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is activated, the box will try to subscribe to the signal or the event passed in the box parameter.&#x0A;&#x0A;If it is retriggered and the parameter has changed, the box will undo the previous subscription and subscribe to the new signal or the new event." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the box and cancel the subscription, if any." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="This output is triggered when the box encounters an error, and contains the error message." id="5" />
              <Output name="onEvent" type="0" type_size="1" nature="2" inner="0" tooltip="This output is triggered each time the signal/event to which the box is connected is emitted/raised. It will carry the payload associated with the signal emission/event raise." id="6" />
              <Parameter name="event" inherits_from_parent="0" content_type="3" value="LiepaWordRecognized" default_value="" custom_choice="0" tooltip='This parameter describes the signal to connect to, and the service advertising this signal.&#x0A;&#x0A;Use the pattern &quot;Service.Signal&quot; to connect to a signal, or the event key to connect to an event.' id="7" />
            </Box>
            <Box name="LiepaASR_3" id="18" localization="8" tooltip="Subscribes to a signal on a NAOqi2 service, or an event in NAOqi&apos;s shared memory&#x0A;When subscribed, the output will be triggered every time the signal is emitted or the event is raised." x="1438" y="1149">
              <bitmap>media/images/box/interaction/reco_voice.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        import threading
        self.lock = threading.RLock()
        self.signal = None
        self.linkId = -1

    def onUnload(self):
        with self.lock:
            self.unsubscribe()

    def onInput_onStart(self):
        with self.lock:
            self.unsubscribe()
            ALProxy("LiepaASR").start()
            event = self.getParameter("event")

            if(len(event) == 0):
                self.onError("No event or signal given.")
                return

            params = event.split(".")
            if(len(params) == 2):
                try:
                    self.signal = getattr(self.session().service(params[0]), params[1])
                except Exception as e:
                    mem = self.session().service("ALMemory")
                    if(event in mem.getEventList()):
                        self.signal = mem.subscriber(event).signal
                    else:
                        self.onError(event + ": no such service.signal pair found, and no such event declared in ALMemory. Aborting.")
                        return
            else:
                self.signal = self.session().service("ALMemory").subscriber(event).signal

            self.linkId = self.signal.connect(self.reemitSignal)

    def onInput_onStop(self):
        with self.lock:
            self.unsubscribe()
            self.onStopped()

    def unsubscribe(self):
        if(self.signal is not None and self.linkId != -1):
            self.signal.disconnect(self.linkId)

        del self.signal
        self.signal = None
        self.linkId = -1

    def reemitSignal(self, *args):
        if(len(args) == 0):
            self.onEvent()
        elif(len(args) == 1):
            self.onEvent(args[0])
        else:
            self.onEvent(args)
        self.unsubscribe()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is activated, the box will try to subscribe to the signal or the event passed in the box parameter.&#x0A;&#x0A;If it is retriggered and the parameter has changed, the box will undo the previous subscription and subscribe to the new signal or the new event." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the box and cancel the subscription, if any." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="This output is triggered when the box encounters an error, and contains the error message." id="5" />
              <Output name="onEvent" type="0" type_size="1" nature="2" inner="0" tooltip="This output is triggered each time the signal/event to which the box is connected is emitted/raised. It will carry the payload associated with the signal emission/event raise." id="6" />
              <Parameter name="event" inherits_from_parent="0" content_type="3" value="LiepaWordRecognized" default_value="" custom_choice="0" tooltip='This parameter describes the signal to connect to, and the service advertising this signal.&#x0A;&#x0A;Use the pattern &quot;Service.Signal&quot; to connect to a signal, or the event key to connect to an event.' id="7" />
            </Box>
            <Box name="NotRecognized_3" id="19" localization="8" tooltip="" x="1376" y="1417">
              <bitmap>media/images/box/interaction/choice.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        mem = ALProxy("ALMemory")
        val = mem.getData("LiepaWordRecognized")
        if(not val):
            val = "Nėra ką sakyti"
        ALProxy("LiepaTTS").sayText("Nesupratau: " + val)
        self.onStopped(val)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
            </Box>
            <Box name="NotRecognized_2" id="20" localization="8" tooltip="" x="1551" y="908">
              <bitmap>media/images/box/interaction/choice.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        mem = ALProxy("ALMemory")
        val = mem.getData("LiepaWordRecognized")
        if(not val):
            val = "Nėra ką sakyti"
        ALProxy("LiepaTTS").sayText("Nesupratau ką pasakei: " + val)
        self.onStopped(val)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
            </Box>
            <Box name="NotRecognized_4" id="21" localization="8" tooltip="" x="2466" y="960">
              <bitmap>media/images/box/interaction/choice.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        mem = ALProxy("ALMemory")
        val = mem.getData("LiepaWordRecognized")
        if(not val):
            val = "Nėra ką sakyti"
        ALProxy("LiepaTTS").sayText("Nesupratau: " + val)
        self.onStopped(val)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
            </Box>
            <Box name="Q_LittleArmsBumpInFront_LeanRight_01" id="22" localization="8" tooltip='ID : #01E 0005&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Why?&#x0A;- &quot;?&quot;&#x0A;- When?&#x0A;- Where?&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : LeanRight&#x0A;End stance : LeanRight' x="738" y="621">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="35">
                <ActuatorList model="">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="13" value="8.08364" />
                    <Key frame="18" value="-6.1" />
                    <Key frame="23" value="13.3" />
                    <Key frame="34" value="1.57965" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="13" value="1.31597" />
                    <Key frame="23" value="3.51326" />
                    <Key frame="34" value="1.75543" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="11" value="3.33748" />
                    <Key frame="22" value="-0.00240423" />
                    <Key frame="34" value="4.65585" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="11" value="-8.52309" />
                    <Key frame="22" value="-12.4782" />
                    <Key frame="34" value="-12.7419" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="15" value="-30.4081" />
                    <Key frame="24" value="-42.8888" />
                    <Key frame="33" value="-31.287" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="15" value="-79.0171" />
                    <Key frame="24" value="-108.461" />
                    <Key frame="33" value="-74.0951" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="15" value="0.18" />
                    <Key frame="24" value="0.56" />
                    <Key frame="33" value="0.3068" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="11" value="5.01224" />
                    <Key frame="22" value="25.2273" />
                    <Key frame="34" value="17.7565" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="11" value="9.75839" />
                    <Key frame="22" value="15.6471" />
                    <Key frame="34" value="17.2292" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="11" value="-11.7751" />
                    <Key frame="22" value="-12.7419" />
                    <Key frame="34" value="-13.0935" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="11" value="1.75543" />
                    <Key frame="22" value="-5.18802" />
                    <Key frame="34" value="-4.66066" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="15" value="79.6275" />
                    <Key frame="24" value="75.8482" />
                    <Key frame="33" value="81.2974" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="15" value="5.09532" />
                    <Key frame="24" value="8.25942" />
                    <Key frame="33" value="2.1949" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="15" value="-12.2194" />
                    <Key frame="24" value="-66.888" />
                    <Key frame="33" value="-6.06693" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="11" value="1.76024" />
                    <Key frame="22" value="-2.107" />
                    <Key frame="34" value="-1.0523" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="11" value="0.705531" />
                    <Key frame="22" value="-1.75543" />
                    <Key frame="34" value="-3.33748" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="13" value="40.1689" />
                    <Key frame="21" value="56.1652" />
                    <Key frame="35" value="42.8936" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="13" value="81.5611" />
                    <Key frame="21" value="111.444" />
                    <Key frame="35" value="65.4769" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="13" value="0.18" />
                    <Key frame="21" value="0.56" />
                    <Key frame="35" value="0.3068" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="11" value="4.91954" />
                    <Key frame="22" value="27.3319" />
                    <Key frame="34" value="21.8826" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="11" value="0.61764" />
                    <Key frame="22" value="3.1665" />
                    <Key frame="34" value="5.27591" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="11" value="-11.7751" />
                    <Key frame="22" value="-12.7419" />
                    <Key frame="34" value="-13.0935" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="11" value="2.90283" />
                    <Key frame="22" value="-4.74374" />
                    <Key frame="34" value="-4.48007" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="13" value="82.1812" />
                    <Key frame="21" value="80.7749" />
                    <Key frame="35" value="86.5758" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="13" value="-1.58445" />
                    <Key frame="21" value="-0.353968" />
                    <Key frame="35" value="-2.72705" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="13" value="4.30429" />
                    <Key frame="21" value="54.1389" />
                    <Key frame="35" value="8.17153" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
              <Resource name="Standing" type="Lock" timeout="1" />
              <Resource name="All motors" type="Lock" timeout="1" />
            </Box>
            <Box name="LittleAmsUpAndDownWithBump_01" id="23" localization="8" tooltip='ID : #01F 0014&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- &quot;!&quot;&#x0A;- Awesome&#x0A;- Great&#x0A;- Terrible&#x0A;- Impressive&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center' x="173" y="736">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="53">
                <ActuatorList model="">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="11" value="-10.6373" />
                    <Key frame="16" value="11.5" />
                    <Key frame="21" value="-5.45169" />
                    <Key frame="36" value="-5.45169" />
                    <Key frame="42" value="11.5" />
                    <Key frame="47" value="-10.6373" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="11" value="-1.05711" />
                    <Key frame="21" value="0" />
                    <Key frame="36" value="0" />
                    <Key frame="47" value="-1.05711" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="22" value="5.35899" />
                    <Key frame="31" value="-1.67234" />
                    <Key frame="38" value="5.35899" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="22" value="-7.3805" />
                    <Key frame="31" value="-6.76526" />
                    <Key frame="38" value="-7.3805" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="9" value="-19.949" />
                    <Key frame="18" value="-84.0221" />
                    <Key frame="26" value="-7.90786" />
                    <Key frame="34" value="-5" />
                    <Key frame="42" value="-31.9023" />
                    <Key frame="51" value="-20.1248" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="9" value="-56.5168" />
                    <Key frame="26" value="-88.1578" />
                    <Key frame="34" value="-88.1578" />
                    <Key frame="42" value="-50.5401" />
                    <Key frame="51" value="-56.1652" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="9" value="0.3756" />
                    <Key frame="18" value="0.13" />
                    <Key frame="26" value="1" />
                    <Key frame="34" value="1" />
                    <Key frame="42" value="0.45" />
                    <Key frame="51" value="0.3872" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="22" value="7.12163" />
                    <Key frame="31" value="0.00240423" />
                    <Key frame="38" value="7.12163" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="22" value="5.89115" />
                    <Key frame="31" value="6.5064" />
                    <Key frame="38" value="5.89115" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="22" value="-9.75358" />
                    <Key frame="31" value="-9.75358" />
                    <Key frame="38" value="-9.75358" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="22" value="-5.29" />
                    <Key frame="31" value="8.25942" />
                    <Key frame="38" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="9" value="77.0786" />
                    <Key frame="18" value="67.9379" />
                    <Key frame="26" value="76.2876" />
                    <Key frame="34" value="76.2876" />
                    <Key frame="42" value="68.2895" />
                    <Key frame="51" value="78.2212" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="9" value="7.73207" />
                    <Key frame="18" value="-1.67234" />
                    <Key frame="34" value="12.8" />
                    <Key frame="42" value="4.83163" />
                    <Key frame="51" value="4.74374" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="9" value="-14.5924" />
                    <Key frame="18" value="-75.853" />
                    <Key frame="26" value="-87.8062" />
                    <Key frame="34" value="-82.7837" />
                    <Key frame="42" value="-63.1965" />
                    <Key frame="51" value="-15.5001" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="22" value="5.10013" />
                    <Key frame="31" value="-2.1949" />
                    <Key frame="38" value="5.10013" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="22" value="7.82477" />
                    <Key frame="31" value="6.41851" />
                    <Key frame="38" value="7.82477" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="11" value="23.7332" />
                    <Key frame="20" value="83.6753" />
                    <Key frame="28" value="14.7682" />
                    <Key frame="36" value="5" />
                    <Key frame="44" value="37.5322" />
                    <Key frame="53" value="23.03" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="11" value="67.059" />
                    <Key frame="20" value="74.1782" />
                    <Key frame="28" value="95.0086" />
                    <Key frame="36" value="95.0086" />
                    <Key frame="44" value="58.2698" />
                    <Key frame="53" value="67.3227" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="11" value="0.372" />
                    <Key frame="20" value="0.13" />
                    <Key frame="28" value="1" />
                    <Key frame="36" value="1" />
                    <Key frame="44" value="0.45" />
                    <Key frame="53" value="0.3788" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="22" value="7.55628" />
                    <Key frame="31" value="-1.49656" />
                    <Key frame="38" value="7.55628" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="22" value="-5.97423" />
                    <Key frame="31" value="-4.39218" />
                    <Key frame="38" value="-5.97423" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="22" value="-9.75358" />
                    <Key frame="31" value="-9.75358" />
                    <Key frame="38" value="-9.75358" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="22" value="-5.00743" />
                    <Key frame="31" value="10.4615" />
                    <Key frame="38" value="-5.00743" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="11" value="81.2144" />
                    <Key frame="20" value="67.8548" />
                    <Key frame="28" value="82.9722" />
                    <Key frame="36" value="82.9722" />
                    <Key frame="44" value="77.435" />
                    <Key frame="53" value="81.478" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="11" value="-7.38531" />
                    <Key frame="20" value="2.1949" />
                    <Key frame="36" value="-12.8" />
                    <Key frame="44" value="-2.72705" />
                    <Key frame="53" value="-5.10013" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="11" value="19.6853" />
                    <Key frame="20" value="80.9459" />
                    <Key frame="28" value="96.3269" />
                    <Key frame="36" value="79.1" />
                    <Key frame="44" value="72.4204" />
                    <Key frame="53" value="19.5975" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
              <Resource name="Standing" type="Lock" timeout="1" />
              <Resource name="All motors" type="Lock" timeout="1" />
            </Box>
            <Box name="N_LittleSpreadRightArm_HeadShake_01" id="24" localization="8" tooltip="ID : #01D 0005&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- No&#x0A;- Not&#x0A;- Never&#x0A;- Negative&#x0A;- Can&apos;t&#x0A;- False&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="1206" y="548">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40">
                <ActuatorList model="">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="25" value="4.14983" />
                    <Key frame="36" value="-5.27293" />
                    <Key frame="40" value="-0.884312" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="6" value="-0.704539" />
                    <Key frame="15" value="-0.584837" />
                    <Key frame="21" value="-5.64614">
                      <Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" />
                      <Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" />
                    </Key>
                    <Key frame="25" value="5.11666">
                      <Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" />
                      <Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" />
                    </Key>
                    <Key frame="29" value="-5.64614">
                      <Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" />
                      <Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" />
                    </Key>
                    <Key frame="34" value="5.11666">
                      <Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" />
                      <Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" />
                    </Key>
                    <Key frame="40" value="-0.803639" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="19" value="-1.58445" />
                    <Key frame="40" value="5.48707" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="19" value="-10.5446" />
                    <Key frame="40" value="-10.6188" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="25" value="-24.3672" />
                    <Key frame="40" value="-23.844" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="25" value="-69.0739" />
                    <Key frame="40" value="-68.6623" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="25" value="0.314203" />
                    <Key frame="40" value="0.306419" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="19" value="-5.18321" />
                    <Key frame="40" value="6.88663" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="19" value="10.7252" />
                    <Key frame="40" value="10.7714" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="19" value="-10.3688" />
                    <Key frame="40" value="-10.3054" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="19" value="10.8962" />
                    <Key frame="40" value="-5.03106" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="25" value="80.5715" />
                    <Key frame="40" value="83.8536" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="25" value="14.1482" />
                    <Key frame="40" value="10.814" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="25" value="-6.19439" />
                    <Key frame="40" value="5.59801" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="19" value="-1.14019" />
                    <Key frame="40" value="5.16609" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="19" value="3.78175" />
                    <Key frame="40" value="4.49468" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="25" value="24.5468" />
                    <Key frame="40" value="23.6641" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="25" value="109.944" />
                    <Key frame="40" value="68.4009" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="25" value="0.53724" />
                    <Key frame="40" value="0.3" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="19" value="-7.29742" />
                    <Key frame="40" value="7.92846" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="19" value="-1.66754" />
                    <Key frame="40" value="-1.41998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="19" value="-10.3688" />
                    <Key frame="40" value="-10.3054" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="19" value="13.0104" />
                    <Key frame="40" value="-5.10977" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="25" value="83.3423" />
                    <Key frame="40" value="84.0387" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="25" value="-13.1627" />
                    <Key frame="40" value="-10.6192" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="25" value="44.8951" />
                    <Key frame="40" value="6.22854" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
              <Resource name="Standing" type="Lock" timeout="1" />
              <Resource name="All motors" type="Lock" timeout="1" />
            </Box>
            <Box name="LittleArmsBump_01" id="25" localization="8" tooltip='ID : #01E 0006&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- What?&#x0A;- &quot;?&quot;&#x0A;- Maybe&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center' x="1130" y="1018">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="24">
                <ActuatorList model="">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="12" value="2.8" />
                    <Key frame="18" value="-13.8" />
                    <Key frame="24" value="-0.884312" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="24" value="5.2711" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="24" value="-8.96255" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="18" value="-25.2" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="24" value="-69.8763" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="18" value="0.52" />
                    <Key frame="24" value="0.3256" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="24" value="7.38531" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="24" value="8.5279" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="24" value="-10.193" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="24" value="-4.74855" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="24" value="82.3521" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="18" value="19.2" />
                    <Key frame="24" value="12.2146" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="18" value="-53.9" />
                    <Key frame="24" value="4.83163" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="24" value="4.92435" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="24" value="6.06693" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="18" value="25.2" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="24" value="68.9926" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="18" value="0.52" />
                    <Key frame="24" value="0.314" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="24" value="7.20472" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="24" value="-3.33748" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="24" value="-10.193" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="24" value="-5.09532" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="24" value="83.2359" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="18" value="-19.2" />
                    <Key frame="24" value="-11.692" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="18" value="53.9" />
                    <Key frame="24" value="6.94104" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
              <Resource name="Standing" type="Lock" timeout="1" />
              <Resource name="All motors" type="Lock" timeout="1" />
            </Box>
            <Box name="SlowBowWithArms_01" id="42" localization="8" tooltip="ID : #01C 0026&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Go&#x0A;- Affirmative&#x0A;- Can&#x0A;- Indicate&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="2861" y="59">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="51">
                <ActuatorList model="">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="15" value="-11.4275" />
                    <Key frame="24" value="-14.3096" />
                    <Key frame="29" value="2.2" />
                    <Key frame="37" value="-13.4" />
                    <Key frame="42" value="-2.1" />
                    <Key frame="49" value="-7.39858" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="13" value="4.39427" />
                    <Key frame="22" value="5.2615" />
                    <Key frame="27" value="5.83927" />
                    <Key frame="35" value="5.83927" />
                    <Key frame="40" value="5.83927" />
                    <Key frame="47" value="5.24849" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="13" value="-4.26134" />
                    <Key frame="22" value="-5.15548" />
                    <Key frame="27" value="-5.73068" />
                    <Key frame="35" value="-6.35319" />
                    <Key frame="40" value="-6.35319" />
                    <Key frame="47" value="-6.35319" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="17" value="-88.3224" />
                    <Key frame="26" value="-88.3224" />
                    <Key frame="31" value="-88.3224" />
                    <Key frame="39" value="-82.721" />
                    <Key frame="44" value="-73.9596" />
                    <Key frame="51" value="-65.862" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="17" value="-68.1519" />
                    <Key frame="26" value="-57.8875" />
                    <Key frame="31" value="-55.3138" />
                    <Key frame="39" value="-59.9818" />
                    <Key frame="44" value="-59.9818" />
                    <Key frame="51" value="-59.9818" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="17" value="0.865834" />
                    <Key frame="26" value="0.854073" />
                    <Key frame="31" value="0.843551" />
                    <Key frame="39" value="0.8" />
                    <Key frame="44" value="0.592788" />
                    <Key frame="51" value="0.376586" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="13" value="7.57681" />
                    <Key frame="22" value="2.42793" />
                    <Key frame="27" value="-0.236286" />
                    <Key frame="35" value="-2.28279" />
                    <Key frame="40" value="1.9805" />
                    <Key frame="47" value="7.5858" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="13" value="1.79606" />
                    <Key frame="22" value="2.56746" />
                    <Key frame="27" value="2.56746" />
                    <Key frame="35" value="3.18885" />
                    <Key frame="40" value="4.03031" />
                    <Key frame="47" value="4.80285" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="13" value="-9.8646" />
                    <Key frame="22" value="-9.8646" />
                    <Key frame="27" value="-10.4376" />
                    <Key frame="35" value="-11.0883" />
                    <Key frame="40" value="-11.0883" />
                    <Key frame="47" value="-10.3535" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="13" value="-4.74636" />
                    <Key frame="22" value="-4.74636" />
                    <Key frame="27" value="-4.74636" />
                    <Key frame="35" value="-4.74636" />
                    <Key frame="40" value="-4.74636" />
                    <Key frame="47" value="-4.74636" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="17" value="79.8052" />
                    <Key frame="26" value="70.8914" />
                    <Key frame="31" value="69.3222" />
                    <Key frame="39" value="72.1598" />
                    <Key frame="44" value="72.7714" />
                    <Key frame="51" value="74.0205" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="17" value="7.36612" />
                    <Key frame="26" value="6.06407" />
                    <Key frame="31" value="5.26006" />
                    <Key frame="39" value="2.60293" />
                    <Key frame="44" value="7.72673" />
                    <Key frame="51" value="12.163" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="17" value="-21.016" />
                    <Key frame="26" value="-43.9666" />
                    <Key frame="31" value="-54.9769" />
                    <Key frame="39" value="-64.7665" />
                    <Key frame="44" value="-39.1675" />
                    <Key frame="51" value="-5.66774" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="13" value="4.8023" />
                    <Key frame="22" value="5.59974" />
                    <Key frame="27" value="6.28749" />
                    <Key frame="35" value="6.28749" />
                    <Key frame="40" value="5.63887" />
                    <Key frame="47" value="4.91933" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="13" value="9.00774" />
                    <Key frame="22" value="7.48585" />
                    <Key frame="27" value="6.81659" />
                    <Key frame="35" value="6.81659" />
                    <Key frame="40" value="6.81659" />
                    <Key frame="47" value="6.81659" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="15" value="86.1549" />
                    <Key frame="24" value="87.7583" />
                    <Key frame="29" value="87.7583" />
                    <Key frame="37" value="64.9846" />
                    <Key frame="42" value="60.2937" />
                    <Key frame="49" value="58.6416" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="15" value="68.2695" />
                    <Key frame="24" value="57.0892" />
                    <Key frame="29" value="55.0117" />
                    <Key frame="37" value="58.8014" />
                    <Key frame="42" value="59.628" />
                    <Key frame="49" value="60.2413" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="15" value="0.618988" />
                    <Key frame="24" value="0.456782" />
                    <Key frame="29" value="0.367645" />
                    <Key frame="37" value="0.304126" />
                    <Key frame="42" value="0.304126" />
                    <Key frame="49" value="0.304126" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="13" value="6.81969" />
                    <Key frame="22" value="2.52902" />
                    <Key frame="27" value="0.345477" />
                    <Key frame="35" value="-1.16591" />
                    <Key frame="40" value="2.57098" />
                    <Key frame="47" value="7.48417" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="13" value="-8.72964" />
                    <Key frame="22" value="-6.30757" />
                    <Key frame="27" value="-5.50677" />
                    <Key frame="35" value="-4.82732" />
                    <Key frame="40" value="-4.82732" />
                    <Key frame="47" value="-4.82732" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="13" value="-9.8646" />
                    <Key frame="22" value="-9.8646" />
                    <Key frame="27" value="-10.4376" />
                    <Key frame="35" value="-11.0883" />
                    <Key frame="40" value="-11.0883" />
                    <Key frame="47" value="-10.3535" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="13" value="-4.52137" />
                    <Key frame="22" value="-4.52137" />
                    <Key frame="27" value="-4.52137" />
                    <Key frame="35" value="-4.52137" />
                    <Key frame="40" value="-4.52137" />
                    <Key frame="47" value="-4.52137" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="15" value="72.7806" />
                    <Key frame="24" value="70.0927" />
                    <Key frame="29" value="69.5119" />
                    <Key frame="37" value="74.1141" />
                    <Key frame="42" value="77.0457" />
                    <Key frame="49" value="79.665" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="15" value="-8.72776" />
                    <Key frame="24" value="-10.8365" />
                    <Key frame="29" value="-11.6998" />
                    <Key frame="37" value="-11.6998" />
                    <Key frame="42" value="-12.3151" />
                    <Key frame="49" value="-12.3151" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="15" value="-21.8077" />
                    <Key frame="24" value="20.7802" />
                    <Key frame="29" value="42.9035" />
                    <Key frame="37" value="64.4107" />
                    <Key frame="42" value="39.9616" />
                    <Key frame="49" value="6.68441" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
              <Resource name="Standing" type="Lock" timeout="1" />
              <Resource name="All motors" type="Lock" timeout="1" />
            </Box>
            <Box name="Blink" id="26" localization="8" tooltip="This box makes the robot blink once." x="660" y="123">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05
        self.leds.fadeRGB( "FaceLed0", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed1", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed2", 0xffffff, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed3", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed4", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed5", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed6", 0xffffff, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration, _async=True )
        time.sleep( 0.1 )
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration )
        self.onDone()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
            </Box>
            <Box name="Blink (1)" id="27" localization="8" tooltip="This box makes the robot blink once." x="1266" y="1286">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05
        self.leds.fadeRGB( "FaceLed0", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed1", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed2", 0xffffff, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed3", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed4", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed5", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed6", 0xffffff, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration, _async=True )
        time.sleep( 0.1 )
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration )
        self.onDone()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
            </Box>
            <Box name="Blink (2)" id="28" localization="8" tooltip="This box makes the robot blink once." x="1371" y="698">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05
        self.leds.fadeRGB( "FaceLed0", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed1", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed2", 0xffffff, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed3", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed4", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed5", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed6", 0xffffff, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration, _async=True )
        time.sleep( 0.1 )
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration )
        self.onDone()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
            </Box>
            <Box name="Bored" id="29" localization="8" tooltip="ID : #02C 0003&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Bored" x="2081" y="527">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="145">
                <BehaviorLayer name="LED">
                  <BehaviorKeyframe name="thinking" index="1">
                    <Diagram>
                      <Box name="blinks" id="1" localization="8" tooltip="blinks" x="151" y="48">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        self.leds.fadeRGB( "FaceLed0", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed1", 0xffffff, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed2", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed3", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed4", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed5", 0xffffff, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed6", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        time.sleep( 0.2 );

        rDuration = 0.05;
        self.leds.fadeRGB( "FaceLed0", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed1", 0xffffff, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed2", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed3", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed4", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed5", 0xffffff, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed6", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        time.sleep( 0.5 );

        rDuration = 1;
        self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration );

        time.sleep( 2.5 );

        rDuration = 0.6;
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration );


        return;


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                    <Key frame="32" value="1.49176" />
                    <Key frame="62" value="8.08363" />
                    <Key frame="106" value="14.3239" />
                    <Key frame="145" value="-2.99072" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                    <Key frame="32" value="1.49176" />
                    <Key frame="62" value="30.5839" />
                    <Key frame="106" value="30.5839" />
                    <Key frame="145" value="3.33748" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                    <Key frame="28" value="81.1217" />
                    <Key frame="58" value="78.3091" />
                    <Key frame="102" value="78.2212" />
                    <Key frame="141" value="85.4284" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                    <Key frame="28" value="7.11683" />
                    <Key frame="58" value="7.64418" />
                    <Key frame="102" value="12.0388" />
                    <Key frame="141" value="9.92936" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                    <Key frame="28" value="-44.2119" />
                    <Key frame="58" value="-67.3275" />
                    <Key frame="102" value="-73.1283" />
                    <Key frame="141" value="-46.4971" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                    <Key frame="28" value="-54.7541" />
                    <Key frame="58" value="-23.2889" />
                    <Key frame="102" value="-14.9392" />
                    <Key frame="141" value="-33.6601" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                    <Key frame="58" value="-41.3115" />
                    <Key frame="102" value="-40.4326" />
                    <Key frame="141" value="-40.3447" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                    <Key frame="58" value="0.268389" />
                    <Key frame="102" value="0.261844" />
                    <Key frame="141" value="0.270207" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                    <Key frame="24" value="76.8198" />
                    <Key frame="54" value="72.0736" />
                    <Key frame="98" value="73.5678" />
                    <Key frame="137" value="84.5542" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                    <Key frame="24" value="-6.85796" />
                    <Key frame="54" value="-6.68218" />
                    <Key frame="98" value="-8.26423" />
                    <Key frame="137" value="-12.8346" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                    <Key frame="24" value="40.9551" />
                    <Key frame="54" value="47.547" />
                    <Key frame="98" value="54.3147" />
                    <Key frame="137" value="48.0744" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                    <Key frame="24" value="46.6729" />
                    <Key frame="54" value="17.3171" />
                    <Key frame="98" value="7.4732" />
                    <Key frame="137" value="35.3349" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                    <Key frame="54" value="55.1057" />
                    <Key frame="98" value="54.9299" />
                    <Key frame="137" value="54.842" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                    <Key frame="54" value="0.359298" />
                    <Key frame="98" value="0.350207" />
                    <Key frame="137" value="0.364025" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                    <Key frame="56" value="-18.9718" />
                    <Key frame="100" value="-21.1691" />
                    <Key frame="139" value="-16.6866" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                    <Key frame="56" value="0" />
                    <Key frame="100" value="-1.6232" />
                    <Key frame="139" value="6.81441" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                    <Key frame="56" value="-22.1872" />
                    <Key frame="100" value="-23.7693" />
                    <Key frame="139" value="5.58656" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                    <Key frame="56" value="19" />
                    <Key frame="100" value="21.8249" />
                    <Key frame="139" value="10.1353" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                    <Key frame="56" value="3" />
                    <Key frame="100" value="1.44574" />
                    <Key frame="139" value="-2" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                    <Key frame="56" value="-3" />
                    <Key frame="100" value="-1.28216" />
                    <Key frame="139" value="-5.50096" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                    <Key frame="56" value="2.29103" />
                    <Key frame="100" value="4.40043" />
                    <Key frame="139" value="-2" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                    <Key frame="56" value="-18.2768" />
                    <Key frame="100" value="-20.5619" />
                    <Key frame="139" value="3.95985" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                    <Key frame="56" value="18.8154" />
                    <Key frame="100" value="20.9248" />
                    <Key frame="139" value="9.67464" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                    <Key frame="56" value="-1" />
                    <Key frame="100" value="-2.49492" />
                    <Key frame="139" value="-2" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                    <Key frame="56" value="2" />
                    <Key frame="100" value="0.217547" />
                    <Key frame="139" value="1" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
              <Resource name="Standing" type="Lock" timeout="1" />
              <Resource name="Left eye leds" type="Lock" timeout="1" />
              <Resource name="Right eye leds" type="Lock" timeout="1" />
              <Resource name="HeadYaw" type="Lock" timeout="1" />
              <Resource name="HeadPitch" type="Lock" timeout="1" />
              <Resource name="LShoulderPitch" type="Lock" timeout="1" />
              <Resource name="LShoulderRoll" type="Lock" timeout="1" />
              <Resource name="LElbowRoll" type="Lock" timeout="1" />
              <Resource name="LElbowYaw" type="Lock" timeout="1" />
              <Resource name="LWristYaw" type="Lock" timeout="1" />
              <Resource name="LHand" type="Lock" timeout="1" />
              <Resource name="RShoulderPitch" type="Lock" timeout="1" />
              <Resource name="RShoulderRoll" type="Lock" timeout="1" />
              <Resource name="RElbowRoll" type="Lock" timeout="1" />
              <Resource name="RElbowYaw" type="Lock" timeout="1" />
              <Resource name="RWristYaw" type="Lock" timeout="1" />
              <Resource name="RHand" type="Lock" timeout="1" />
              <Resource name="LHipYawPitch" type="Lock" timeout="1" />
              <Resource name="LHipRoll" type="Lock" timeout="1" />
              <Resource name="LHipPitch" type="Lock" timeout="1" />
              <Resource name="LKneePitch" type="Lock" timeout="1" />
              <Resource name="LAnklePitch" type="Lock" timeout="1" />
              <Resource name="LAnkleRoll" type="Lock" timeout="1" />
              <Resource name="RHipRoll" type="Lock" timeout="1" />
              <Resource name="RHipPitch" type="Lock" timeout="1" />
              <Resource name="RKneePitch" type="Lock" timeout="1" />
              <Resource name="RAnklePitch" type="Lock" timeout="1" />
              <Resource name="RAnkleRoll" type="Lock" timeout="1" />
            </Box>
            <Box name="Blink (3)" id="30" localization="8" tooltip="This box makes the robot blink once." x="2266" y="771">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05
        self.leds.fadeRGB( "FaceLed0", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed1", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed2", 0xffffff, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed3", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed4", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed5", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed6", 0xffffff, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration, _async=True )
        time.sleep( 0.1 )
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration )
        self.onDone()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
            </Box>
            <Box name="Welocome" id="31" localization="8" tooltip="" x="226" y="18">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        ALProxy("LiepaTTS").sayText("Labas. Pašiaušk mane, kad pradėtume žaidimą" )
        self.onStopped("")

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
            </Box>
            <Box name="HiRightArm" id="32" localization="8" tooltip="" x="228" y="119">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="100">
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="30" value="-9.49471" />
                    <Key frame="59" value="-9.49471" />
                    <Key frame="100" value="-9.49471" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="30" value="-0.178186" />
                    <Key frame="59" value="-0.178186" />
                    <Key frame="100" value="-0.178186" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="30" value="4.74374" />
                    <Key frame="59" value="4.74374" />
                    <Key frame="100" value="4.74374" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="30" value="-6.32579" />
                    <Key frame="59" value="-6.32579" />
                    <Key frame="100" value="-6.32579" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="30" value="-23.1131" />
                    <Key frame="59" value="-23.1131" />
                    <Key frame="100" value="-23.1131" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="30" value="-67.679" />
                    <Key frame="59" value="-67.679" />
                    <Key frame="100" value="-67.679" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="30" value="0.2948" />
                    <Key frame="59" value="0.2948" />
                    <Key frame="100" value="0.2948" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="30" value="7.4732" />
                    <Key frame="59" value="7.4732" />
                    <Key frame="100" value="7.4732" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="30" value="6.77007" />
                    <Key frame="59" value="6.77007" />
                    <Key frame="100" value="6.77007" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="30" value="-9.66569" />
                    <Key frame="59" value="-9.66569" />
                    <Key frame="100" value="-9.66569" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="30" value="-5.45169" />
                    <Key frame="59" value="-5.45169" />
                    <Key frame="100" value="-5.45169" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="30" value="83.1432" />
                    <Key frame="59" value="83.7584" />
                    <Key frame="100" value="84.6373" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="30" value="11.5993" />
                    <Key frame="59" value="11.5114" />
                    <Key frame="100" value="9.92936" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="30" value="4.04062" />
                    <Key frame="59" value="4.04062" />
                    <Key frame="100" value="4.04062" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="30" value="4.92435" />
                    <Key frame="59" value="4.92435" />
                    <Key frame="100" value="5.01224" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="30" value="6.3306" />
                    <Key frame="59" value="6.3306" />
                    <Key frame="100" value="6.3306" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="30" value="23.5574" />
                    <Key frame="59" value="53.5285" />
                    <Key frame="100" value="24.3484" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="30" value="69.52" />
                    <Key frame="59" value="72.6841" />
                    <Key frame="100" value="69.4321" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="30" value="0.2924" />
                    <Key frame="59" value="0.2924" />
                    <Key frame="100" value="0.2924" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="30" value="7.3805" />
                    <Key frame="59" value="7.3805" />
                    <Key frame="100" value="7.3805" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="30" value="-6.58948" />
                    <Key frame="59" value="-6.58948" />
                    <Key frame="100" value="-6.58948" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="30" value="-9.66569" />
                    <Key frame="59" value="-9.66569" />
                    <Key frame="100" value="-9.66569" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="30" value="-5.35899" />
                    <Key frame="59" value="-5.35899" />
                    <Key frame="100" value="-5.35899" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="30" value="83.148" />
                    <Key frame="59" value="-11.072" />
                    <Key frame="100" value="82.0054" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="30" value="-11.6041" />
                    <Key frame="59" value="-25.0515" />
                    <Key frame="100" value="-10.6373" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="30" value="5.2711" />
                    <Key frame="59" value="-33.3134" />
                    <Key frame="100" value="-0.266077" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="8" />
            <Link inputowner="7" indexofinput="2" outputowner="6" indexofoutput="4" />
            <Link inputowner="7" indexofinput="2" outputowner="11" indexofoutput="6" />
            <Link inputowner="6" indexofinput="2" outputowner="17" indexofoutput="6" />
            <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="6" />
            <Link inputowner="10" indexofinput="2" outputowner="15" indexofoutput="6" />
            <Link inputowner="7" indexofinput="2" outputowner="10" indexofoutput="4" />
            <Link inputowner="16" indexofinput="2" outputowner="10" indexofoutput="5" />
            <Link inputowner="16" indexofinput="2" outputowner="10" indexofoutput="6" />
            <Link inputowner="4" indexofinput="2" outputowner="6" indexofoutput="3" />
            <Link inputowner="13" indexofinput="2" outputowner="18" indexofoutput="6" />
            <Link inputowner="19" indexofinput="2" outputowner="13" indexofoutput="3" />
            <Link inputowner="20" indexofinput="2" outputowner="11" indexofoutput="3" />
            <Link inputowner="21" indexofinput="2" outputowner="10" indexofoutput="3" />
            <Link inputowner="23" indexofinput="2" outputowner="0" indexofoutput="4" />
            <Link inputowner="5" indexofinput="2" outputowner="23" indexofoutput="4" />
            <Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="8" />
            <Link inputowner="22" indexofinput="2" outputowner="16" indexofoutput="4" />
            <Link inputowner="1" indexofinput="2" outputowner="22" indexofoutput="4" />
            <Link inputowner="24" indexofinput="2" outputowner="6" indexofoutput="5" />
            <Link inputowner="8" indexofinput="2" outputowner="24" indexofoutput="4" />
            <Link inputowner="25" indexofinput="2" outputowner="6" indexofoutput="6" />
            <Link inputowner="12" indexofinput="2" outputowner="25" indexofoutput="4" />
            <Link inputowner="42" indexofinput="2" outputowner="7" indexofoutput="4" />
            <Link inputowner="1" indexofinput="2" outputowner="42" indexofoutput="4" />
            <Link inputowner="26" indexofinput="2" outputowner="4" indexofoutput="4" />
            <Link inputowner="26" indexofinput="2" outputowner="1" indexofoutput="4" />
            <Link inputowner="17" indexofinput="2" outputowner="26" indexofoutput="3" />
            <Link inputowner="27" indexofinput="2" outputowner="19" indexofoutput="4" />
            <Link inputowner="27" indexofinput="2" outputowner="12" indexofoutput="4" />
            <Link inputowner="18" indexofinput="2" outputowner="27" indexofoutput="3" />
            <Link inputowner="9" indexofinput="2" outputowner="28" indexofoutput="3" />
            <Link inputowner="28" indexofinput="2" outputowner="8" indexofoutput="4" />
            <Link inputowner="28" indexofinput="2" outputowner="20" indexofoutput="4" />
            <Link inputowner="14" indexofinput="2" outputowner="29" indexofoutput="4" />
            <Link inputowner="29" indexofinput="2" outputowner="11" indexofoutput="4" />
            <Link inputowner="29" indexofinput="2" outputowner="11" indexofoutput="5" />
            <Link inputowner="7" indexofinput="2" outputowner="13" indexofoutput="4" />
            <Link inputowner="29" indexofinput="2" outputowner="13" indexofoutput="5" />
            <Link inputowner="29" indexofinput="2" outputowner="13" indexofoutput="6" />
            <Link inputowner="30" indexofinput="2" outputowner="14" indexofoutput="4" />
            <Link inputowner="30" indexofinput="2" outputowner="21" indexofoutput="4" />
            <Link inputowner="15" indexofinput="2" outputowner="30" indexofoutput="3" />
            <Link inputowner="32" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="31" indexofinput="2" outputowner="32" indexofoutput="4" />
            <Link inputowner="3" indexofinput="2" outputowner="31" indexofoutput="4" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
